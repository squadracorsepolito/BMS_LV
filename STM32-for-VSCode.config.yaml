# Configuration file for the STM32 for VSCode extension
# Arrays can be inputted in two ways. One is: [entry_1, entry_2, ..., entry_final]
# or by adding an indented list below the variable name e.g.:
# VARIABLE:
# - entry_1
# - entry_2

# The project name
target: BMS_LV
# Can be C or C++
language: C

optimization: Og

# MCU settings
targetMCU: stm32f4x
cpu: cortex-m4 # type of cpu e.g. cortex-m4
fpu: fpv4-sp-d16 # Defines how floating points are defined. Can be left empty.
floatAbi: -mfloat-abi=hard
ldscript: STM32F446RETx_FLASH.ld # linker script

# Compiler definitions. The -D prefix for the compiler will be automatically added.
cDefinitions: []
cxxDefinitions: []
asDefinitions: []

# Compiler definition files. you can add a single files or an array of files for different definitions.
# The file is expected to have a definition each new line.
# This allows to include for example a .definition file which can be ignored in git and can contain
# This can be convenient for passing along secrets at compile time, or generating a file for per device setup.
cDefinitionsFile:
cxxDefinitionsFile:
asDefinitionsFile:

# Compiler flags
cFlags: 
  - -Wall
  - -fdata-sections
  - -ffunction-sections

cxxFlags: []
assemblyFlags: 
  - -Wall
  - -fdata-sections
  - -ffunction-sections

linkerFlags:
  - -u_printf_float

# libraries to be included. The -l prefix to the library will be automatically added.
libraries: 
  - c
  - m

# Library directories. Folders can be added here that contain custom libraries.
libraryDirectories: []

# Files or folders that will be excluded from compilation.
# Glob patterns (https://www.wikiwand.com/en/Glob_(programming)) can be used.
# Do mind that double stars are reserved in yaml
# these should be escaped with a: \ or the name should be in double quotes e.g. "**.test.**"
excludes: 
  - "**/Examples/**"
  - "**/examples/**"
  - "**/Example/**"
  - "**/example/**"
  - "**_template.*"


# Include directories (directories containing .h or .hpp files)
# If a CubeMX makefile is present it will automatically include the include directories from that makefile.
includeDirectories: 
  - Inc/**
  - Core/Inc/**
  - Lib/**
  - Src/**
  - Core/Src/**


# Files that should be included in the compilation.
# If a CubeMX makefile is present it will automatically include the  c and cpp/cxx files from that makefile.
# Glob patterns (https://www.wikiwand.com/en/Glob_(programming)) can be used.
# Do mind that double stars are reserved in yaml
# these should be escaped with a: \ or the name should be in double quotes e.g. "HARDWARE_DRIVER*.c"
sourceFiles:  
  - Src/**
  - Core/Src/**
  - Lib/L9963E_lib/src/**
  - Lib/stmlibs/timer_utils/**
  - Lib/stmlibs/timebase/**
  - Lib/stmlibs/error_utils/**
  - Lib/stmlibs/logger/**


# When no makefile is present it will show a warning pop-up.
# However when compilation without the CubeMX Makefile is desired, this can be turned of.
suppressMakefileWarning: false

# Custom makefile rules
# Here custom makefile rules can be added to the STM32Make.make file
# an example of how this can be used is commented out below.
customMakefileRules:
- command: srec_output
  rule: "bin2srec -a $$(grep 'FLASH (rx)      : ORIGIN =' STM32F446RETx_FLASH_shifted.ld | awk '{print $$6}' | sed 's/.$$//') -i $(BUILD_DIR)/$(TARGET)_shifted.bin -o $(BUILD_DIR)/$(TARGET)_shifted.srec"
  dependsOn: $(BUILD_DIR)/$(TARGET)_shifted.bin # can be left out    
- command: $(BUILD_DIR)/$(TARGET)_shifted.elf
  rule: "$(CC) $(OBJECTS) $(MCU) $(ADDITIONALLDFLAGS) -TSTM32F446RETx_FLASH_shifted.ld $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -o $@"
  dependsOn: $(OBJECTS) STM32Make.make
- command: $(BUILD_DIR)/$(TARGET)_shifted.bin
  rule: $(BIN) $< $@
  dependsOn: $(BUILD_DIR)/$(TARGET)_shifted.elf | $(BUILD_DIR)



# Additional flags which will be used when invoking the make command
makeFlags:
# - -O  # use this option when the output of make is mixed up only works for make version 4.0 and upwards
# - --silent # use this option to silence the output of the build
    